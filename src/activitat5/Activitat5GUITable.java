package activitat5;

import damas.entity.Moviments;
import damas.entity.MovimentsId;
import damas.entity.Partida;
import java.awt.EventQueue;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.hibernate.Session;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Alumne
 */

public class Activitat5GUITable extends javax.swing.JFrame {

    /**
     * Creates new form Activitat5GUI
     */
    public Activitat5GUITable() {
        initComponents();
        Session session = (Session)damas.util.HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        session.save(p);
        session.getTransaction().commit();
        session.close();
    }

    private boolean jugaX = true;
    private boolean jugaO = false;
    int filaOrigen = -1;
    int columnaOrigen = -1;
    int numMoviments = 0;
    String guanyador = "Empat";
    Partida p = new Partida(new Date(), numMoviments, guanyador);
    List<Moviments> listMoviments = new ArrayList<>();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton3.setText("Sortir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"X", null, "X", null, "X", null, "X", null},
                {null, "X", null, "X", null, "X", null, "X"},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {"O", null, "O", null, "O", null, "O", null},
                {null, "O", null, "O", null, "O", null, "O"}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Els missatges es mostren aqui");

        jLabel2.setText("Juga: X");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(79, 79, 79)
                        .addComponent(jLabel1)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);
        Activitat5GUI gui = new Activitat5GUI();
        gui.setVisible(true);
        Session session = (Session)damas.util.HibernateUtil.getSessionFactory().openSession();
        
        session.beginTransaction();
        session.update(p);
        session.getTransaction().commit();
        
        //
        for (int i = 0; i < listMoviments.size(); i++) {
            
            session.beginTransaction();
            session.save(listMoviments.get(i));
            session.getTransaction().commit();
        }
//        for (Moviments mov : listMoviments) {
//            
//            session.beginTransaction();
//            session.update(mov);
//            session.getTransaction().commit();
//        }
        session.close();
        
        //
        //invokeAndWait(()->Thread.sleep(500));
    }//GEN-LAST:event_jButton3ActionPerformed

    boolean missatge = false;
    boolean movimentCorrecte = false;
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        boolean missatge = false;
        boolean movimentCorrecte = false;
        int fila = obtenirFilaClicada();
        int columna = obtenirColumnaClicada();
        
        if (noHiHaOrigen() && !esBuit(fila, columna)) {
            
            if (jugaX && EsX(fila,columna)) {
                
                ActualitzaNouOrigen(fila,columna);
                
            } else if (jugaO && EsO(fila,columna)) {
                
                ActualitzaNouOrigen(fila,columna);
                
            }
            
        } else {
            
            if (movimentVÃ lid(fila,columna)){
                
                mou(fila,columna);
                movimentCorrecte = true;
                
            } else if (ocupatPropi(fila,columna)) {
                
                ActualitzaNouOrigen(fila, columna);
            }
        }
        
        if ((esBuit(fila, columna) || OcupatContrari(fila, columna)) && !movimentCorrecte && !missatge) {
                
                missatge = true;
                jLabel1.setText("ERROR selecciona la fitxa que vols moure");
        }
        if (!missatge) {
             jLabel1.setText("Els missatges es mostren aqui");
        }
        movimentCorrecte = false;
        missatge = false;
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Activitat5GUITable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Activitat5GUITable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Activitat5GUITable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Activitat5GUITable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Activitat5GUITable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    
    private int obtenirFilaClicada() {
        return jTable1.getSelectedRow();
    }

    private int obtenirColumnaClicada() {
        return jTable1.getSelectedColumn();
    }

    private boolean noHiHaOrigen() {
        
        if (filaOrigen == -1) {
            
            return true;
        } else {
            
            return false;
        }
    }

    private void ActualitzaNouOrigen(int fila, int columna) {
        
       filaOrigen = fila;
       columnaOrigen = columna;
    }

    private boolean EsX(int fila, int columna) {
        if (jTable1.getValueAt(fila, columna).equals("X")) {
            
            return true;
        }
        return false;
    }

    private boolean EsO(int fila, int columna) {
        if (jTable1.getValueAt(fila, columna).equals("O")) {
            
            return true;
        }
        return false;
    }

    private boolean movimentVÃ lid(int fila, int columna) {
        
        if (jugaX && fila == filaOrigen + 1) {
            
            if (columna == columnaOrigen + 1 || columna == columnaOrigen - 1) {
              
                if (esBuit(fila,columna) || OcupatContrari(fila,columna)) {
                    
                    return true;
                }
            } 
            
        } else if (jugaO && fila == filaOrigen - 1) {
            
            if (columna == columnaOrigen + 1 || columna == columnaOrigen - 1) {
              
                if (esBuit(fila,columna) || OcupatContrari(fila,columna)) {
                    
                    return true;
                }
            } 
        }
        
        return false;
    }

    private boolean esBuit(int fila, int columna) {
        if (jTable1.getValueAt(fila, columna) == null) {
            return true;
        }
        return false;
    }

    private boolean OcupatContrari(int fila, int columna) {
        
        if (jugaX) {
            
            if (((String)jTable1.getValueAt(fila, columna)).equals("O")){
                
                return true;
            }
            
        } else if (jugaO) {
            
            if (((String) jTable1.getValueAt(fila, columna)).equals("X")){
                
                return true;
            }
        }
        
        return false;
    }

    private boolean ocupatPropi(int fila, int columna) {
        
        if (!esBuit(fila, columna)) {
            
            if (jugaX) {
            
            if (((String)jTable1.getValueAt(fila, columna)).equals("X")){
                
                return true;
            }
            
        } else if (jugaO) {
            
            if (((String) jTable1.getValueAt(fila, columna)).equals("O")){
                
                return true;
            }
        }
    }
        
        
        return false;
    }

    private void mou(int fila, int columna) {
        
        jTable1.setValueAt(null, filaOrigen, columnaOrigen);
        
        if (jugaX) {
            
            jTable1.setValueAt("X", fila, columna);
            jugaX = false;
            jugaO = true;
        } else {
            
            jTable1.setValueAt("O", fila, columna);
            jugaX = true;
            jugaO = false;
        }
        
        cambiarJugador();
        filaOrigen = -1;
        columnaOrigen = -1;
        numMoviments++;
        
        String taula = "";
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                
                if (jTable1.getValueAt(i, j) == null) {
                    
                    taula += " ";
                } else if (((String) jTable1.getValueAt(i, j)).equals("O")) {
                    
                    taula += "O";
                    
                } else {
                    
                    taula += "X";
                }
            }
        }
        p.setNumeroMoviments(p.getNumeroMoviments()+1);
        listMoviments.add(new Moviments(new MovimentsId(p.getNumeroPartida(), numMoviments), taula));
    }

    private void cambiarJugador() {
        
        if (jugaX){
            jLabel2.setText("Juga: X");
        } else  {
            jLabel2.setText("Juga: O");
        }
    }
}
